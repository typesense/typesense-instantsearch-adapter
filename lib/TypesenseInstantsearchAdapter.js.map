{"version":3,"file":"TypesenseInstantsearchAdapter.js","names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_Configuration","_typesense","_SearchRequestAdapter","_SearchResponseAdapter","_FacetSearchResponseAdapter","TypesenseInstantsearchAdapter","options","_this","updateConfiguration","searchClient","clearCache","search","instantsearchRequests","searchTypesenseAndAdapt","searchForFacetValues","searchTypesenseForFacetValuesAndAdapt","key","_searchTypesenseAndAdapt","mark","_callee","_this2","typesenseResponse","adaptedResponses","wrap","_callee$","_context","prev","next","_adaptAndPerformTypesenseRequest","sent","results","map","typesenseResult","index","_validateTypesenseResult","responseAdapter","SearchResponseAdapter","configuration","adaptedResponse","adapt","abrupt","t0","console","error","stop","_x","apply","arguments","_searchTypesenseForFacetValuesAndAdapt","_callee2","_this3","_callee2$","_context2","FacetSearchResponseAdapter","_x2","_adaptAndPerformTypesenseRequest2","_callee3","requestAdapter","_callee3$","_context3","SearchRequestAdapter","typesenseClient","request","JSON","parse","_x3","TypesenseSearchClient","server","Configuration","validate","Error","concat","code","hits","grouped_hits"],"sources":["../src/TypesenseInstantsearchAdapter.js"],"sourcesContent":["\"use strict\";\n\nimport { Configuration } from \"./Configuration\";\nimport { SearchClient as TypesenseSearchClient } from \"typesense\";\nimport { SearchRequestAdapter } from \"./SearchRequestAdapter\";\nimport { SearchResponseAdapter } from \"./SearchResponseAdapter\";\nimport { FacetSearchResponseAdapter } from \"./FacetSearchResponseAdapter\";\n\nexport default class TypesenseInstantsearchAdapter {\n  constructor(options) {\n    this.updateConfiguration(options);\n    this.searchClient = {\n      clearCache: () => this.clearCache(),\n      search: (instantsearchRequests) => this.searchTypesenseAndAdapt(instantsearchRequests),\n      searchForFacetValues: (instantsearchRequests) =>\n        this.searchTypesenseForFacetValuesAndAdapt(instantsearchRequests),\n    };\n  }\n\n  async searchTypesenseAndAdapt(instantsearchRequests) {\n    let typesenseResponse;\n    try {\n      typesenseResponse = await this._adaptAndPerformTypesenseRequest(instantsearchRequests);\n\n      const adaptedResponses = typesenseResponse.results.map((typesenseResult, index) => {\n        this._validateTypesenseResult(typesenseResult);\n        const responseAdapter = new SearchResponseAdapter(\n          typesenseResult,\n          instantsearchRequests[index],\n          this.configuration,\n          typesenseResponse.results,\n          typesenseResponse,\n        );\n        let adaptedResponse = responseAdapter.adapt();\n\n        return adaptedResponse;\n      });\n\n      return {\n        results: adaptedResponses,\n      };\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async searchTypesenseForFacetValuesAndAdapt(instantsearchRequests) {\n    let typesenseResponse;\n    try {\n      typesenseResponse = await this._adaptAndPerformTypesenseRequest(instantsearchRequests);\n\n      const adaptedResponses = typesenseResponse.results.map((typesenseResult, index) => {\n        this._validateTypesenseResult(typesenseResult);\n        const responseAdapter = new FacetSearchResponseAdapter(\n          typesenseResult,\n          instantsearchRequests[index],\n          this.configuration,\n        );\n        return responseAdapter.adapt();\n      });\n\n      return adaptedResponses;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async _adaptAndPerformTypesenseRequest(instantsearchRequests) {\n    const requestAdapter = new SearchRequestAdapter(instantsearchRequests, this.typesenseClient, this.configuration);\n    const typesenseResponse = await requestAdapter.request();\n    if (typeof typesenseResponse === \"string\") {\n      try {\n        return JSON.parse(typesenseResponse);\n      } catch (error) {\n        return typesenseResponse;\n      }\n    } else {\n      return typesenseResponse;\n    }\n  }\n\n  clearCache() {\n    this.typesenseClient = new TypesenseSearchClient(this.configuration.server);\n    return this.searchClient;\n  }\n\n  updateConfiguration(options) {\n    this.configuration = new Configuration(options);\n    this.configuration.validate();\n    this.typesenseClient = new TypesenseSearchClient(this.configuration.server);\n    return true;\n  }\n\n  _validateTypesenseResult(typesenseResult) {\n    if (typesenseResult.error) {\n      throw new Error(`${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n    if (!typesenseResult.hits && !typesenseResult.grouped_hits) {\n      throw new Error(`Did not find any hits. ${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}